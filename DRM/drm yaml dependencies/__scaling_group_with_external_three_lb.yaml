heat_template_version: 2013-05-23
description: >
  A Heat template which deployed a highly available scaling group with 3 load balancers.
  Ver. 1.0.6-0
parameters:
  nameprefix:
    type: string
    description: A prefix string for the name of the instance
  instance_name:
    type: string
    description: Instance name - can be the component name
  key_name:
    type: string
    description: Name of an existing key pair to use for the instance
  flavor:
    type: string
    description: flavor for the instance to be created
  image:
    type: string
    description: Name of the image to use for the instance
  availability_zone:
    type: string 
    description: The Availability Zone in which to launch the instance.
  security_group_id: 
    type: string 
    description: ID of an admin security group.
  private_network_id:
    type: string
    description: ID of network into which servers get deployed 
  private_subnet_id:
    type: string
    description: ID of network subnet into which servers get deployed
    
  min_size:
    type: number
    description: The minimum size of the scaling group
  max_size:
    type: number
    description: The maximum size of the scaling group 
  
  first_lb_name:
    type: string
    description: The LB Name. will be  LB.<product_artifact_id>.<lb_name>.<environment>
  first_lb_port:
    type: string
    description: The listening port. 
  protocol_first_lb:
    type: string
    description: First Load Balancer protocol.
    constraints:
      - allowed_values: [ HTTP, HTTPS, TCP ]
        description: Value must be one of 'HTTP' , 'HTTPS' or 'TCP'
  second_lb_name:
    type: string
    description: The LB Name. will be LB.<product_artifact_id>.<lb_name>.<environment>
  second_lb_port:
    type: string
    description: The listening port. 
  protocol_second_lb:
    type: string
    description: Second Load Balancer protocol.
    constraints:
      - allowed_values: [ HTTP, HTTPS, TCP ]
        description: Value must be one of 'HTTP' , 'HTTPS' or 'TCP'
  third_lb_name:
    type: string
    description: The LB Name. will be LB.<product_artifact_id>.<lb_name>.<environment>  
  third_lb_port:
    type: string
    description: The listening port.
  protocol_third_lb:
    type: string
    description: First Load Balancer protocol.
    constraints:
      - allowed_values: [ HTTP, HTTPS, TCP ]
        description: Value must be one of 'HTTP' , 'HTTPS' or 'TCP'

  floating_ip_id_first_lb:
    type: string
    description: Floationg IP ID to associate to the first Load Balancer 
  floating_ip_id_second_lb:
    type: string
    description: Floationg IP ID to associate to the second Load Balancer 
  floating_ip_id_third_lb:
    type: string
    description: Floationg IP ID to associate to the second Load Balancer
  product_artifact_id:
    type: string
    description: The product name- used for LB DNS record. 
  environment:
    type: string
    description: DNS environment name  
  component_installation:
    type: string
    description: The boot script to run on instance creation.
  deployment_timeout:
    type: number
    description: The time it takes for this instance to be fully deployed.
  instance_identifier:
    type: string
    description: Short string to identify the instance 
            
resources:
  
  monitor:
    type: OS::Neutron::HealthMonitor
    properties:
      type: TCP
      delay: 5
      max_retries: 5
      timeout: 5
  
  
  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security Group for Scaling Group
      rules:
        - remote_ip_prefix: 
            str_replace:
              template:
                lb_vip/32
              params:
                lb_vip: { get_attr: [pool_first_lb , vip , address] }    
          protocol: tcp
          port_range_min: { get_param: first_lb_port }
          port_range_max: { get_param: first_lb_port }
        - remote_ip_prefix: 
            str_replace:
              template:
                lb_vip/32
              params:
                lb_vip: { get_attr: [pool_second_lb , vip , address] }    
          protocol: tcp
          port_range_min: { get_param: second_lb_port }
          port_range_max: { get_param: second_lb_port }
        - remote_ip_prefix:
            str_replace:
              template:
                lb_vip/32
              params:
                lb_vip: { get_attr: [pool_third_lb , vip , address] }
          protocol: tcp
          port_range_min: { get_param: third_lb_port }
          port_range_max: { get_param: third_lb_port }

  floating_ip_association_first_lb:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_param: floating_ip_id_first_lb }   
      port_id: { "Fn::Select" : [ "port_id", { get_attr: [ pool_first_lb , vip ] } ] } 
       
  floating_ip_association_second_lb:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_param: floating_ip_id_second_lb }   
      port_id: { "Fn::Select" : [ "port_id", { get_attr: [ pool_second_lb , vip ] } ] }

  floating_ip_association_third_lb:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_param: floating_ip_id_third_lb }
      port_id: { "Fn::Select" : [ "port_id", { get_attr: [ pool_third_lb , vip ] } ] }
  
  pool_first_lb:
    type: OS::Neutron::Pool
    properties:
      name:
        str_replace:
          template: LB.$product_artifact_id.$first_lb_name.$environment.$instance_identifier
          params:
            $product_artifact_id : { get_param: product_artifact_id }
            $first_lb_name: { get_param: first_lb_name }
            $environment: { get_param: environment }
            $instance_identifier: { get_param: instance_identifier }
      protocol: { get_param: protocol_first_lb }
      monitors: [{get_resource: monitor}]
      subnet_id: {get_param: private_subnet_id}
      lb_method: ROUND_ROBIN
      vip:
        protocol_port: { get_param: first_lb_port }       
  first_lb:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: {get_resource: pool_first_lb}   
  
  pool_second_lb:
    type: OS::Neutron::Pool
    properties:
      name:
        str_replace:
          template: LB.$product_artifact_id.$second_lb_name.$environment.$instance_identifier
          params:
            $product_artifact_id : { get_param: product_artifact_id }
            $second_lb_name: { get_param: second_lb_name }
            $environment: { get_param: environment }
            $instance_identifier: { get_param: instance_identifier }
      protocol: { get_param: protocol_second_lb }
      monitors: [{get_resource: monitor}]
      subnet_id: {get_param: private_subnet_id}
      lb_method: ROUND_ROBIN
      vip:
        protocol_port: { get_param: second_lb_port }             
  second_lb:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: {get_resource: pool_second_lb}   

  pool_third_lb:
    type: OS::Neutron::Pool
    properties:
      name:
        str_replace:
          template: LB.$product_artifact_id.$third_lb_name.$environment.$instance_identifier
          params:
            $product_artifact_id : { get_param: product_artifact_id }
            $third_lb_name: { get_param: third_lb_name }
            $environment: { get_param: environment }
            $instance_identifier: { get_param: instance_identifier }
      protocol: { get_param: protocol_third_lb }
      monitors: [{get_resource: monitor}]
      subnet_id: {get_param: private_subnet_id}
      lb_method: ROUND_ROBIN
      vip:
        protocol_port: { get_param: third_lb_port }
  third_lb:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: {get_resource: pool_third_lb}

  group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }  
      desired_capacity: { get_param: min_size }  
      resource:
        type: __scaling_group_instance_for_three_lb.yaml
        properties:
          nameprefix: { get_param: nameprefix }
          instance_name: { get_param: instance_name }
          image: {get_param: image}
          key_name: {get_param: key_name}
          flavor: {get_param: flavor}
          groupname_stack: { get_param: "OS::stack_name" }
          private_network_id: {get_param: private_network_id}
          security_groups_ids:
            - {get_param: security_group_id }
            - {get_resource: security_group } 
          availability_zone: { get_param: availability_zone }
          first_lb_details: { "name" : { get_attr: [ pool_first_lb, name ] }, "pool_id": {get_resource: pool_first_lb}, "port": { get_param: first_lb_port }, "internal_ip": { get_attr: [ pool_first_lb, vip, address ] } }
          second_lb_details: { "name" : { get_attr: [ pool_second_lb, name ] }, "pool_id": {get_resource: pool_second_lb}, "port": { get_param: second_lb_port }, "internal_ip": { get_attr: [ pool_second_lb, vip, address ] } }
          third_lb_details: { "name" : { get_attr: [ pool_third_lb, name ] }, "pool_id": {get_resource: pool_third_lb}, "port": { get_param: third_lb_port }, "internal_ip": { get_attr: [ pool_third_lb, vip, address ] } }
          environment: { get_param: environment }
          component_installation: { get_param: component_installation }
          instance_identifier: { get_param: instance_identifier }
          deployment_timeout: { get_param : deployment_timeout }
          
          
  scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: group}
      cooldown: 60
      scaling_adjustment: 1
  scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: group}
      cooldown: 60
      scaling_adjustment: -1
  
outputs:
  first_lb_ip:
    description: First Load balancer IP 
    value: { get_attr: [ pool_first_lb, vip, address ] }
  first_lb_fqdn:
    description: First Load balancer FQDN 
    value: { get_attr: [ pool_first_lb, name ] }
  second_lb_ip:
    description: Second Load balancer IP 
    value: { get_attr: [ pool_second_lb, vip, address ] }
  second_lb_fqdn:
    description: Second Load balancer FQDN 
    value: { get_attr: [ pool_second_lb, name ] }
  third_lb_ip:
    description: Third Load balancer IP
    value: { get_attr: [ pool_third_lb, vip, address ] }
  third_lb_fqdn:
    description: Third Load balancer FQDN 
    value: { get_attr: [ pool_third_lb, name ] }